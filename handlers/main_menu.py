from aiogram import Router, types
from aiogram.filters import CommandStart
from aiogram.utils.keyboard import InlineKeyboardBuilder

router = Router()

@router.message(CommandStart())
async def send_welcome(message: types.Message):
    builder = InlineKeyboardBuilder()
    builder.button(text="üìã –°–ø–∏—Å–æ–∫ –∑–∞–≤–¥–∞–Ω—å", callback_data="menu_todo")
    builder.button(text="‚òÄÔ∏è –ü–æ–≥–æ–¥–∞", callback_data="menu_weather")
    builder.button(text="üß† –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è GPT", callback_data="menu_gpt")
    builder.button(text="* –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è", callback_data="settings")
    builder.adjust(1)

    await message.answer(
        text="üëã –í—ñ—Ç–∞—é! –û–±–µ—Ä–∏ –¥—ñ—é –∑ –º–µ–Ω—é –Ω–∏–∂—á–µ:",
        reply_markup=builder.as_markup()
    )

@router.callback_query(lambda c: c.data.startswith("menu_"))
async def handle_menu_selection(callback: types.CallbackQuery):
    if callback.data == "menu_todo":
        from handlers.todo import show_todo_menu
        await show_todo_menu(callback)
    elif callback.data == "menu_weather":
        await callback.message.answer("‚òÄÔ∏è –û–±—Ä–∞–Ω–æ: –ø–æ–≥–æ–¥–∞")
    elif callback.data == "menu_gpt":
        await callback.message.answer("üß† –û–±—Ä–∞–Ω–æ: GPT-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è")
    elif callback.data == "settings":
        await callback.message.answer("* –û–±—Ä–∞–Ω–æ: –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è")
    else:
        await callback.message.answer("‚ùå –ù–µ–≤—ñ–¥–æ–º–∏–π –ø—É–Ω–∫—Ç –º–µ–Ω—é")

    await callback.answer()
